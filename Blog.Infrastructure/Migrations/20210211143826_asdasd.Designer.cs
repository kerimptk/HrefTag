// <auto-generated />
using System;
using Blog.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Infrastructure.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20210211143826_asdasd")]
    partial class asdasd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Blog.Domain.Entities.Etiket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ad");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Etiketler");
                });

            modelBuilder.Entity("Blog.Domain.Entities.EtiketYazi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int?>("EtiketId")
                        .HasColumnType("int")
                        .HasColumnName("etiket_id");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YaziId")
                        .HasColumnType("int")
                        .HasColumnName("yazi_id");

                    b.HasKey("Id");

                    b.HasIndex("EtiketId");

                    b.HasIndex("YaziId");

                    b.ToTable("EtiketYazilar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.GenelAyarlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Favicon")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("favicon");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("logo_url");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GenelAyarlar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.IletisimBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(2500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("adres");

                    b.Property<string>("Eposta")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("eposta");

                    b.Property<string>("Harita")
                        .HasMaxLength(2500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2500)")
                        .HasColumnName("harita");

                    b.Property<string>("Telefon")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.ToTable("IletisimBilgileri");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ad");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("RenkKodu")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("renk_kodu");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlAd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("url_ad");

                    b.Property<int?>("YaziSayisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("yazi_sayisi")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Blog.Domain.Entities.KategoriYazi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("KategoriId")
                        .HasColumnType("int")
                        .HasColumnName("kategori_id");

                    b.Property<int>("YaziId")
                        .HasColumnType("int")
                        .HasColumnName("yazi_id");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("YaziId");

                    b.ToTable("KategoriYazilar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.PostaKutusu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ad");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAdresi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip_adresi");

                    b.Property<string>("Konu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("konu");

                    b.Property<string>("Mesaj")
                        .HasMaxLength(2500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2500)")
                        .HasColumnName("mesaj");

                    b.Property<int?>("OnayDurumuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("onay_durumu_id")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("soyad");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PostaKutusu");
                });

            modelBuilder.Entity("Blog.Domain.Entities.ReklamAlanlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("aciklama");

                    b.Property<string>("AlanAdi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("alan_adi");

                    b.Property<string>("Kodu")
                        .HasMaxLength(2500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2500)")
                        .HasColumnName("kodu");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("ReklamAlanlari");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Sayfa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Baslik")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("baslik");

                    b.Property<string>("Icerik")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("icerik");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnayDurumuId")
                        .HasColumnType("int")
                        .HasColumnName("onay_durumu_id");

                    b.Property<string>("OneCikanGorsel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("one_cikan_gorsel");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlBaslik")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_baslik");

                    b.HasKey("Id");

                    b.ToTable("Sayfalar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.SeoAyarlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ad");

                    b.Property<string>("Analytics")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("analytics");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Keywords")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("keywords");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("SeoAyarlari");
                });

            modelBuilder.Entity("Blog.Domain.Entities.SosyalMedya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Facebook")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Facebook");

                    b.Property<string>("Instagram")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("instagram");

                    b.Property<string>("Twitter")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Twitter");

                    b.Property<string>("Youtube")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Youtube");

                    b.HasKey("Id");

                    b.ToTable("SosyalMedya");
                });

            modelBuilder.Entity("Blog.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("About")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Adress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Education")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Job")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Skills")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Blog.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Yazi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Baslik")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("baslik");

                    b.Property<string>("Icerik")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("icerik");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OkunmaSayisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("okunma_sayisi")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("OnayDurumuId")
                        .HasColumnType("int")
                        .HasColumnName("onay_durumu_id");

                    b.Property<int>("OneCikan")
                        .HasColumnType("int")
                        .HasColumnName("one_cikan");

                    b.Property<string>("OneCikanGorsel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("one_cikan_gorsel");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlBaslik")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_baslik");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Yazilar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ad_soyad");

                    b.Property<int?>("CevaplananYorumId")
                        .HasColumnType("int")
                        .HasColumnName("cevaplanan_yorum_id");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAdres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip_adres");

                    b.Property<string>("KullaniciYorumu")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("yorum");

                    b.Property<int>("OnayDurumuId")
                        .HasColumnType("int")
                        .HasColumnName("onay_durumu_id");

                    b.Property<int>("SilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("website");

                    b.Property<int?>("YaziId")
                        .HasColumnType("int")
                        .HasColumnName("yazi_id");

                    b.HasKey("Id");

                    b.HasIndex("CevaplananYorumId");

                    b.HasIndex("YaziId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("Blog.Domain.Entities.EtiketYazi", b =>
                {
                    b.HasOne("Blog.Domain.Entities.Etiket", "Etiket")
                        .WithMany()
                        .HasForeignKey("EtiketId");

                    b.HasOne("Blog.Domain.Entities.Yazi", "Yazi")
                        .WithMany()
                        .HasForeignKey("YaziId");

                    b.Navigation("Etiket");

                    b.Navigation("Yazi");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Kategori", b =>
                {
                    b.HasOne("Blog.Domain.Entities.Kategori", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Blog.Domain.Entities.KategoriYazi", b =>
                {
                    b.HasOne("Blog.Domain.Entities.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Domain.Entities.Yazi", "Yazi")
                        .WithMany("KategoriYazilar")
                        .HasForeignKey("YaziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Yazi");
                });

            modelBuilder.Entity("Blog.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Blog.Domain.Entities.Role", "Role")
                        .WithOne()
                        .HasForeignKey("Blog.Domain.Entities.UserRole", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("Blog.Domain.Entities.UserRole", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Yazi", b =>
                {
                    b.HasOne("Blog.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("Blog.Domain.Entities.Yazi", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Yorum", b =>
                {
                    b.HasOne("Blog.Domain.Entities.Yorum", "CevaplananYorum")
                        .WithMany()
                        .HasForeignKey("CevaplananYorumId");

                    b.HasOne("Blog.Domain.Entities.Yazi", "Yazi")
                        .WithMany()
                        .HasForeignKey("YaziId");

                    b.Navigation("CevaplananYorum");

                    b.Navigation("Yazi");
                });

            modelBuilder.Entity("Blog.Domain.Entities.Yazi", b =>
                {
                    b.Navigation("KategoriYazilar");
                });
#pragma warning restore 612, 618
        }
    }
}
